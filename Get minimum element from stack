//{ Driver Code Starts
import java.util.*;



class Get_Min_From_Stack
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T>0)
		{
			int q = sc.nextInt();
			GfG g = new GfG();
			while(q>0)
			{
				int qt = sc.nextInt();
				
				if(qt == 1)
				{
					int att = sc.nextInt();
					g.push(att);
					//System.out.println(att);
				}
				else if(qt == 2)
				{
					System.out.print(g.pop()+" ");
				}
				else if(qt == 3)
				{
					System.out.print(g.getMin()+" ");
				}
			
			q--;
			}
			System.out.println();
		T--;
		}
		
	}
}



// } Driver Code Ends

class GfG {
    Stack<Integer> s;
    Stack<Integer> minStack;

    // Constructor
    GfG() {
        s = new Stack<>();
        minStack = new Stack<>();
    }

    /* Returns the minimum element from the stack */
    int getMin() {
        if (minStack.isEmpty()) {
            return -1;  // Or throw an exception
        }
        return minStack.peek();
    }

    /* Returns and removes the top element from the stack */
    int pop() {
        if (s.isEmpty()) {
            return -1;  // Or throw an exception
        }
        int top=s.pop();
        if(top==minStack.peek()) minStack.pop();
        
        return top;
    }

    /* Pushes an element x into the stack */
    void push(int x) {
        s.push(x);
        if (minStack.isEmpty() || x <= minStack.peek()) {
            minStack.push(x);
        } 
        
    }
}


