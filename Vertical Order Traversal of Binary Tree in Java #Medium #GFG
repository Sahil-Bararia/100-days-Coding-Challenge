class Solution{
    static class pair{
        Node node;
        int ind;
        public pair(Node node, int ind){
            this.node=node;
            this.ind=ind;
        }
    }
    static ArrayList <Integer> verticalOrder(Node root){
        TreeMap<Integer, ArrayList<Integer>> map=new TreeMap<>();
        ArrayDeque<pair> dq=new ArrayDeque<>();
        dq.add(new pair(root,0));
        while(!dq.isEmpty()){
            pair rem=dq.remove();
            int i1=rem.ind;
            if(map.containsKey(i1)){
                map.get(i1).add(rem.node.data);
            }else {
                map.put(i1, new ArrayList<>());
                map.get(i1).add(rem.node.data);
            }
            if(rem.node.left!=null)dq.add(new pair(rem.node.left,i1-1));
            if(rem.node.right!=null)dq.add(new pair(rem.node.right,i1+1));
        }
        ArrayList<Integer> ans=new ArrayList<>();
        for(int key:map.keySet()) {
        	for(Integer a: map.get(key)) {
        		ans.add(a);
        	}
        }
        return ans;
    }
}
