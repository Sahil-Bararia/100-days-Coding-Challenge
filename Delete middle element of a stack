//{ Driver Code Starts
//Initial template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main (String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        
        while(t-->0)
        {
            int sizeOfStack =sc.nextInt();
            Stack <Integer> myStack=new Stack<>();
            
            //adding elements to the stack
            for(int i=0;i<sizeOfStack;i++)
            {
                int x=sc.nextInt();
                myStack.push(x);
                
            }
                Solution obj=new Solution();
                obj.deleteMid(myStack,sizeOfStack);
                
                while(!myStack.isEmpty())
                {
                    System.out.print(myStack.peek()+" ");
                    myStack.pop();
                }
                System.out.println();
        }
        
        
    }
}
// } Driver Code Ends


class Solution {
    // Function to delete the middle element of a stack.
    public void deleteMid(Stack<Integer> s, int sizeOfStack) {
        if (s.isEmpty() || sizeOfStack == 0) {
            return;
        }
        // Call helper function with the middle index.
        deleteMidHelper(s, sizeOfStack, 0);
    }

    private void deleteMidHelper(Stack<Integer> s, int size, int current) {
        // If the current index is the middle index, pop the element and return.
        if (current == size / 2) {
            s.pop();
            return;
        }
        // Remove the top element and call the function recursively.
        int top = s.pop();
        deleteMidHelper(s, size, current + 1);
        // Push the top element back to the stack after the middle element is removed.
        s.push(top);
    }

}


