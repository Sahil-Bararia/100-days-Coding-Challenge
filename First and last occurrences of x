//{ Driver Code Starts
//Initial Template for Java



import java.io.*;
import java.util.*;


// } Driver Code Ends
//User function Template for Java


import java.util.ArrayList;
==============================================================================================================
class GFG {
    ArrayList<Integer> find(int arr[], int n, int x) {
        ArrayList<Integer> pair = new ArrayList<>();
        
        // Add all elements from the array to the ArrayList
        for (int i : arr) {
            pair.add(i);
        }
        
        int start = 0;
        int end = n - 1;
        
        // Result array list to store indices
        ArrayList<Integer> result = new ArrayList<>();
        
        while (start <= end) {
            int mid = start + (end - start) / 2;
            
            if (x == pair.get(mid)) {
                // Find the first and last occurrence of x
                int firstIndex = mid;
                int lastIndex = mid;
                
                // Move backward to find the first occurrence
                while (firstIndex > 0 && pair.get(firstIndex - 1) == x) {
                    firstIndex--;
                }
                
                // Move forward to find the last occurrence
                while (lastIndex < n - 1 && pair.get(lastIndex + 1) == x) {
                    lastIndex++;
                }
                
                result.add(firstIndex);
                result.add(lastIndex);
                return result;
            } else if (x > pair.get(mid)) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        
        // If x is not found, return an ArrayList with -1
        result.add(-1);
         result.add(-1);
        return result;
    }
}
===============================================================================================



//{ Driver Code Starts.

// Driver class
class Array {

    // Driver code
    public static void main(String[] args) throws IOException {
        // Taking input using buffered reader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int testcases = Integer.parseInt(br.readLine());
        // looping through all testcases
        while (testcases-- > 0) {
//            int n = Integer.parseInt(br.readLine());
            String line = br.readLine();
            String[] q = line.trim().split("\\s+");
            int n =Integer.parseInt(q[0]);
            int x =Integer.parseInt(q[1]);
//            //int y =Integer.parseInt(q[2]);
            String line1 = br.readLine();
            String[] a1 = line1.trim().split("\\s+");
            int arr[] = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(a1[i]);
            }
            GFG ob = new GFG();
            ArrayList<Integer> ans=ob.find(arr,n,x);
            System.out.println(ans.get(0)+" "+ans.get(1));
        }
    }
}

// } Driver Code Ends
