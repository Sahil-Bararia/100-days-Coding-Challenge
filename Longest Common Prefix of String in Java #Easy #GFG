//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String arr[] = read.readLine().trim().split(" ");

            Solution ob = new Solution();
            System.out.println(ob.longestCommonPrefix(arr));
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution {
    
    public String longestCommonPrefix(String arr[]) {
        if (arr == null || arr.length == 0) {
            return "";
        }

        StringBuilder sb = new StringBuilder();
        int min = Integer.MAX_VALUE;
        int n = arr.length;

        // Find the minimum length string in the array
        for (int i = 0; i < n; i++) {
            if (min > arr[i].length()) {
                min = arr[i].length();
            }
        }

        // Compare characters up to the length of the shortest string
        for (int i = 0; i < min; i++) {
            char currentChar = arr[0].charAt(i);
            for (int j = 1; j < n; j++) {
                if (arr[j].charAt(i) != currentChar) {
                return sb.length() == 0 ? "-1" : sb.toString();

                }
            }
            sb.append(currentChar);
        }

       return sb.length() == 0 ? "-1" : sb.toString();

    }
}
