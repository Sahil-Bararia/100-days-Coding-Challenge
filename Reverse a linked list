{
    //Function to reverse a linked list.
    Node reverseList(Node head)
    {
------------------------------------------------------
Recursive Aproach
--------------------------------------------------
        if(head==null || head.next==null) {
            return head;
        }
        Node rev=reverseList(head.next);
        head.next.next=head;
        head.next=null;
        return rev;
-- ---------------------------------------------------------    
Iterative Approach
----------------------------------------------------------
        Node prev = null;
        Node current = head;
        Node next = null;
          while (current != null) {
            // Store the next node
            next = current.next;
            // Reverse the current node's pointer
            current.next = prev;
            // Move pointers one position ahead
            prev = current;
            current = next;
        }
        // At the end, prev will be the new head
        return prev;
        
    }
}
