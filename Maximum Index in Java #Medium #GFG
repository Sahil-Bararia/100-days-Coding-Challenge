//{ Driver Code Starts
import java.io.*;
import java.util.*;

class Main {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    int n = Integer.parseInt(br.readLine().trim()); // size of array
		    int arr[] = new int[n];
		    String inputLine[] = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        arr[i] = Integer.parseInt(inputLine[i]); // input elements of array
		    }
		    
		    Solution ob = new Solution();
		    
		    System.out.println(ob.maxIndexDiff(arr, n)); // print the result
		}
	}
}
// } Driver Code Ends
===================================================================================================
Time--> O(N^2) 1025/1115 Test Cases Passed
===================================================================================================
class Solution{
    
    // A[]: input array
    // N: size of array
    // Function to find the maximum index difference.
    
    public static int maxIndexDiff(int a[], int n) {
        int maxDiff = -1;
        if (n == 1) {
            return 0;  // If there is only one element, the max index difference is 0
        }
        
        // Iterate over each possible starting index
        for (int i = 0; i < n; i++) {
            // Iterate over each possible ending index greater than the starting index
            for (int j = i + 1; j < n; j++) {
                // Check if the condition a[i] <= a[j] is met
                if (a[i] <= a[j]) {
                    // Update maxDiff if a larger difference is found
                    maxDiff = Math.max(maxDiff, j - i);
                }
            }
        }
        
        return maxDiff;
    }

   
}
=======================================================================================
        Time---> O(N) All Test Cases Passed
=======================================================================================    


//{ Driver Code Starts
import java.io.*;
import java.util.*;

class Main {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    int n = Integer.parseInt(br.readLine().trim()); // size of array
		    int arr[] = new int[n];
		    String inputLine[] = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        arr[i] = Integer.parseInt(inputLine[i]); // input elements of array
		    }
		    
		    Solution ob = new Solution();
		    
		    System.out.println(ob.maxIndexDiff(arr, n)); // print the result
		}
	}
}
// } Driver Code Ends


class Solution{
    
    // A[]: input array
    // N: size of array
    // Function to find the maximum index difference.
    static int maxIndexDiff(int a[], int n) {
        if(n==1)return 0;
        int i,j;
        int maxdif=-1;
        int leftmin[]=new int[n];
        int rightmax[]=new int[n];
        leftmin[0]=a[0];
        rightmax[n-1]=a[n-1];
        for(i=1;i<n;i++)
        {
            leftmin[i]=Math.min(a[i],leftmin[i-1]);
        }
        for(j=n-2;j>=0;j--)
        {
            rightmax[j]=Math.max(a[j],rightmax[j+1]);
        }
        i=0;
        j=0;
        while(i<n && j<n)
        {
            if(leftmin[i]<=rightmax[j])
            {
                maxdif=Math.max(maxdif,j-i);
                j++;
            }
            else
            {
                i++;
            }
        }
        return maxdif;
        
    }
}



