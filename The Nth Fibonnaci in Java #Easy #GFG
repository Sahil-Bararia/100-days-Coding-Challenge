//{ Driver Code Starts
//Initial Template for Java
import java.io.*;
import java.util.*;

// } Driver Code Ends
//User function Template for Java

class Solution{
    static int fib(int N){
        // Only using Recursion TLE Exceeded (Overlapping Subproblems)
        /*  
        if(N<=1)return N;
        return fib(N-1)+fib(N-2);
        */
        
        
        // Using Recursion With DP (TC--->O(N))(SC--->O(N)) (Memoizaton) TLE Exceeded
        /*
        int dp[]=new int[N+1];
        Arrays.fill(dp,-1);
        if(N<=1)return N;
        if(dp[N]!=-1)return dp[N];
        return dp[N]=fib(N-1)+fib(N-2);
        */
        
        
        //Using Tabulation with Prev,Prev2,Curr1 (TC--->O(N))(SC--->O(1)) 
        
        if (N <= 1) return N;

        int prev = 1;
        int prev2 = 0;
        int MOD = 10;  // Using a smaller modulus as per the specific requirement

        for (int i = 2; i <= N; i++) {
            int curr = (prev + prev2) % MOD;
            prev2 = prev;
            prev = curr;
        }
        return prev;
        
    }
}



//{ Driver Code Starts.
class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while(t-- > 0)
        {
            int N = Integer.parseInt(read.readLine());
           
            Solution ob = new Solution();
            System.out.println(ob.fib(N));
        }
    }
}
// } Driver Code Ends
